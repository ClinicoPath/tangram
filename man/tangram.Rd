% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compile.R
\name{tangram}
\alias{tangram}
\alias{tangram.numeric}
\alias{tangram.data.frame}
\alias{tangram.formula}
\alias{tangram.character}
\title{Table creation methods}
\usage{
tangram(x, ...)

\method{tangram}{numeric}(rows, cols, embedded = FALSE)

\method{tangram}{data.frame}(data, colheader = NA)

\method{tangram}{formula}(formula, data, transforms = hmisc_style,
  after = NA)

\method{tangram}{character}(formula, data, transforms = hmisc_style,
  after = NA)
}
\arguments{
\item{rows}{numeric; An integer of the number of rows to create}

\item{cols}{numeric; An integer of the number of cols to create}

\item{embedded}{logical; Will this table be embedded inside another}

\item{data}{data.frame; data to use in table generation}

\item{colheader}{character; Use as column headers in final table}

\item{formula}{formula or character; the formula to apply for summarization}

\item{transforms}{a list of lists that contain the transformation to apply for summarization}

\item{after}{one or more functions to further process an abstract table}
}
\value{
A tangram object (a table).
}
\description{
The tangram method is the principal method to create tables. It uses
R3 method dispatch. If one specifies rows and columns, one gets an empty
table of the given size. A formula or character will invoke the parser
and process the specified data into a table like \code{Hmisc::summaryM}.
Given an \code{rms} object it will summarize that model in a table. A
\code{data.frame} is converted directly into a table as well for later
rendering.
}
\examples{
tangram(1, 1)
tangram(data.frame(x=1:3, y=c('a','b','c')))
tangram(drug ~ bili + albumin + protime + sex + age + spiders, pbc)
tangram("drug ~ bili + albumin + stage::Categorical + protime + sex + age + spiders", pbc)
}
